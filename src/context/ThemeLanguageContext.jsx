import React, { createContext, useContext, useState } from "react";

const ThemeLanguageContext = createContext();

export const ThemeLanguageProvider = ({ children }) => {
  const [theme, setTheme] = useState("dark");
  const [language, setLanguage] = useState("english");

  const isDark = theme === "dark";

  const translations = {
    english: {
      dashboard: "Dashboard",
      tasks: "Tasks",
      myTasks: "My Tasks",
      allTasks: "All Tasks",
      createTask: "Create Task",
      teams: "Teams",
      teamOverview: "Team Overview",
      addMember: "Add Member",
      settings: "Settings",
      welcomeDashboard: "Welcome to the Dashboard",
      dashboardIntro:
        "Here you can see an overview of project statistics, recent activity, and performance metrics.",
      taskHeader: "Task Management System",
      todo: "To-Do",
      inProgress: "In Progress",
      done: "Done",
      teamMembers: "Team Members",
      login: "Login",
      logout: "Logout",
      saveChanges: "Save Changes",
      language: "Language",
      theme: "Theme",
      light: "Light",
      dark: "Dark",
      notifications: "Notifications",
      security: "Security",
      changePassword: "Change Password",
      twoFactorAuth: "Two-Factor Authentication",
      organization: "Organization",
      company: "Company",
      role: "Role",
      david: "David",
      sarah: "Sarah",
      michal: "Michal",
      james: "James",
      michael: "Michael",
      designdatabaseschema: "Design Database Schema",
      developtaskcreation: "Develop Task Creation",
      fixbug: "Fix Bug",
      reviewcode: "Review Code",
      createui: "Create UI",
      writetests: "Write Tests",
      deployproject: "Deploy Project",
      updateapi: "Update API",
      createinitialwireframes: "Create Initial Wireframes",
      defineprojectmilestones: "Define Project Milestones",
      designuserinterface: "Design User Interface",
      writeapidocumentation: "Write API Documentation",
      comingSoonGraphs: "üöÄ Coming soon: Graphs and reports!",
      high: "High",
      medium: "Medium",
      low: "Low",
    },
    hindi: {
      dashboard: "‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°",
      tasks: "‡§ï‡§æ‡§∞‡•ç‡§Ø",
      myTasks: "‡§Æ‡•á‡§∞‡•á ‡§ï‡§æ‡§∞‡•ç‡§Ø",
      allTasks: "‡§∏‡§≠‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§Ø",
      createTask: "‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§¨‡§®‡§æ‡§è‡§Å",
      teams: "‡§ü‡•Ä‡§Æ",
      teamOverview: "‡§ü‡•Ä‡§Æ ‡§Ö‡§µ‡§≤‡•ã‡§ï‡§®",
      addMember: "‡§∏‡§¶‡§∏‡•ç‡§Ø ‡§ú‡•ã‡§°‡§º‡•á‡§Ç",
      settings: "‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏",
      welcomeDashboard: "‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§° ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à",
      dashboardIntro:
        "‡§Ø‡§π‡§æ‡§Å ‡§Ü‡§™ ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§ï‡•á ‡§Ü‡§Å‡§ï‡§°‡§º‡•á, ‡§π‡§æ‡§≤ ‡§ï‡•Ä ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡§æ‡§Å, ‡§î‡§∞ ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§® ‡§Æ‡•á‡§ü‡•ç‡§∞‡§ø‡§ï‡•ç‡§∏ ‡§¶‡•á‡§ñ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§",
      taskHeader: "‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä",
      todo: "‡§ï‡§∞‡§®‡§æ ‡§π‡•à",
      inProgress: "‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§Æ‡•á‡§Ç ‡§π‡•à",
      done: "‡§™‡•Ç‡§∞‡•ç‡§£",
      teamMembers: "‡§ü‡•Ä‡§Æ ‡§∏‡§¶‡§∏‡•ç‡§Ø",
      login: "‡§≤‡•â‡§ó ‡§á‡§®",
      logout: "‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü",
      saveChanges: "‡§™‡§∞‡§ø‡§µ‡§∞‡•ç‡§§‡§® ‡§∏‡§π‡•á‡§ú‡•á‡§Ç",
      language: "‡§≠‡§æ‡§∑‡§æ",
      theme: "‡§•‡•Ä‡§Æ",
      light: "‡§™‡•ç‡§∞‡§ï‡§æ‡§∂",
      dark: "‡§Ö‡§Ç‡§ß‡•á‡§∞‡§æ",
      notifications: "‡§∏‡•Ç‡§ö‡§®‡§æ‡§è‡§Ç",
      security: "‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ",
      changePassword: "‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§¨‡§¶‡§≤‡•á‡§Ç",
      twoFactorAuth: "‡§¶‡•ã-‡§ï‡§æ‡§∞‡§ï ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡•Ä‡§ï‡§∞‡§£",
      organization: "‡§∏‡§Ç‡§ó‡§†‡§®",
      company: "‡§ï‡§Ç‡§™‡§®‡•Ä",
      role: "‡§≠‡•Ç‡§Æ‡§ø‡§ï‡§æ",
      david: "‡§°‡•á‡§µ‡§ø‡§°",
      sarah: "‡§∏‡§æ‡§∞‡§æ",
      michal: "‡§Æ‡§æ‡§á‡§ï‡§≤",
      james: "‡§ú‡•á‡§Æ‡•ç‡§∏",
      michael: "‡§Æ‡§æ‡§á‡§ï‡§≤",
      designdatabaseschema: "‡§°‡•á‡§ü‡§æ‡§¨‡•á‡§∏ ‡§∏‡•ç‡§ï‡•Ä‡§Æ‡§æ ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§ï‡§∞‡•á‡§Ç",
      developtaskcreation: "‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§µ‡§ø‡§ï‡§∏‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç",
      fixbug: "‡§¨‡§ó ‡§†‡•Ä‡§ï ‡§ï‡§∞‡•á‡§Ç",
      reviewcode: "‡§ï‡•ã‡§° ‡§ï‡•Ä ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§æ ‡§ï‡§∞‡•á‡§Ç",
      createui: "‡§Ø‡•Ç‡§Ü‡§à ‡§¨‡§®‡§æ‡§è‡§Ç",
      writetests: "‡§ü‡•á‡§∏‡•ç‡§ü ‡§≤‡§ø‡§ñ‡•á‡§Ç",
      deployproject: "‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§°‡§ø‡§™‡•ç‡§≤‡•â‡§Ø ‡§ï‡§∞‡•á‡§Ç",
      updateapi: "‡§è‡§™‡•Ä‡§Ü‡§à ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç",
      createinitialwireframes: "‡§™‡•ç‡§∞‡§æ‡§∞‡§Ç‡§≠‡§ø‡§ï ‡§µ‡§æ‡§Ø‡§∞‡§´‡§º‡•ç‡§∞‡•á‡§Æ ‡§¨‡§®‡§æ‡§è‡§Ç",
      defineprojectmilestones: "‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§Æ‡§æ‡§á‡§≤‡§∏‡•ç‡§ü‡•ã‡§® ‡§™‡§∞‡§ø‡§≠‡§æ‡§∑‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç",
      designuserinterface: "‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§á‡§Ç‡§ü‡§∞‡§´‡§º‡•á‡§∏ ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§ï‡§∞‡•á‡§Ç",
      writeapidocumentation: "‡§è‡§™‡•Ä‡§Ü‡§à ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º ‡§≤‡§ø‡§ñ‡•á‡§Ç",
      comingSoonGraphs: "üöÄ ‡§ú‡§≤‡•ç‡§¶ ‡§Ü ‡§∞‡§π‡§æ ‡§π‡•à: ‡§ó‡•ç‡§∞‡§æ‡§´‡§º ‡§î‡§∞ ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü‡•ç‡§∏!",
      high: "‡§â‡§ö‡•ç‡§ö",
      medium: "‡§Æ‡§ß‡•ç‡§Ø‡§Æ",
      low: "‡§®‡§ø‡§Æ‡•ç‡§®",
    },
  };

  return (
    <ThemeLanguageContext.Provider
      value={{
        theme,
        setTheme,
        language,
        setLanguage,
        isDark,
        t: translations[language],
      }}
    >
      {children}
    </ThemeLanguageContext.Provider>
  );
};

export const useThemeLang = () => useContext(ThemeLanguageContext);
